/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_SAMPLE_PB_H_INCLUDED
#define PB_SAMPLE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C"
{
#endif

    /* Struct definitions */
    typedef struct _Tx_in
    {
        pb_callback_t sighashes;
        pb_callback_t walletPath;
        pb_callback_t address;
        int64_t amount;
        /* @@protoc_insertion_point(struct:Tx_in) */
    } Tx_in;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Tx_in_init_default                                \
    {                                                     \
        {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0 \
    }
#define Tx_in_init_zero                                   \
    {                                                     \
        {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0 \
    }

/* Field tags (for use in manual encoding/decoding) */
#define Tx_in_sighashes_tag 1
#define Tx_in_walletPath_tag 2
#define Tx_in_address_tag 3
#define Tx_in_amount_tag 4

    /* Struct field encoding specification for nanopb */
    extern const pb_field_t Tx_in_fields[5];

/* Maximum encoded size of messages (where known) */
/* Tx_in_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SAMPLE_MESSAGES

#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif